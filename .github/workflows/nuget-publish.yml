name: Publish NuGet Package

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Test without publishing"
        type: boolean
        default: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: 🔍 Check reachable tags
        run: |
          echo "--- ALL TAGS ---"
          git tag --list
          echo "--- ALL HEAD ---"
          git tag --contains HEAD

      - name: 🧰 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: 📦 Restore dependencies
        run: dotnet restore ./CsFeel/CsFeel.csproj

      - name: 🧪 Run tests
        run: dotnet test ./CsFeel.Test/CsFeel.Test.csproj --configuration Release

      - name: 🧼 Clean CsFeel (MinVer cache)
        run: |
          dotnet clean ./CsFeel/CsFeel.csproj --configuration Release
          rm -rf ./CsFeel/obj

      - name: 🛠️ Build CsFeel (uncached)
        run: |
          dotnet build ./CsFeel/CsFeel.csproj \
            --configuration Release \
            /p:MinVerVerbosity=detailed \
            /p:MinVerSkip=false

      - name: 📦 Pack with MinVer
        id: pack
        run: |
          dotnet pack ./CsFeel/CsFeel.csproj \
            --configuration Release \
            --output ./nuget \
            /p:MinVerVerbosity=detailed \
            /p:MinVerSkip=false \
            /p:MinVerBuildMetadata=ci

          # Extract version from package
          PACKAGE_FILE=$(ls ./nuget/*.nupkg | head -1)
          PACKAGE_VERSION=$(basename "$PACKAGE_FILE" | grep -oP '\d+\.\d+\.\d+')

          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=v${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "Package version: ${PACKAGE_VERSION}"

      - name: 🚫 Skip publish (Dry Run)
        if: ${{ inputs.dry-run }}
        run: |
          echo "DRY RUN: Would publish version ${{ steps.pack.outputs.PACKAGE_VERSION }}"
          echo "Package contents:"
          unzip -l ./nuget/*.nupkg | head -10

      - name: 🚀 Publish to NuGet.org
        if: ${{ !inputs.dry-run }}
        run: dotnet nuget push ./nuget/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: 🚫 Skip Release (Dry Run)
        if: ${{ inputs.dry-run }}
        run: |
          echo "DRY RUN: Would release version ${{ steps.pack.outputs.PACKAGE_VERSION }}"

      - name: 📝 Create GitHub Release
        if: ${{ !inputs.dry-run }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.pack.outputs.TAG_NAME }}
          name: Release ${{ steps.pack.outputs.TAG_NAME }}
          body: |
            ### Version ${{ steps.pack.outputs.PACKAGE_VERSION }}
            - MinVer-generated from Git history
            - Includes all changes since last release
          draft: false
          prerelease: false
          generate_release_notes: true
