name: Publish NuGet Package

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üß∞ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: üì¶ Restore dependencies
        run: dotnet restore ./CsFeel/CsFeel.csproj

      - name: üß™ Run tests
        run: dotnet test ./CsFeel.Test/CsFeel.Test.csproj --configuration Release

      - name: üõ†Ô∏è Build CsFeel
        run: dotnet build ./CsFeel/CsFeel.csproj --configuration Release

      - name: üì¶ Pack NuGet package with MinVer versioning
        id: pack
        run: |
          dotnet pack ./CsFeel/CsFeel.csproj --configuration Release --output ./nuget /p:MinVerBuildMetadata=ci
          # Extract version from the first .nupkg file found
          PACKAGE_VERSION=$(ls ./nuget/*.nupkg | head -1 | grep -oP '\d+\.\d+\.\d+')
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=v${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

      - name: üöÄ Publish to NuGet.org
        run: dotnet nuget push ./nuget/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: üìù Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.pack.outputs.TAG_NAME }}
          name: Release ${{ steps.pack.outputs.TAG_NAME }}
          body: |
            ### What's Changed
            - Version ${{ steps.pack.outputs.PACKAGE_VERSION }} release
            - Source code release
            - Includes all changes since last release
          draft: false
          prerelease: false
          generate_release_notes: true
